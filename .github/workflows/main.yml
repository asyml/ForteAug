name: Python Build

on:
  push:
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7 ]
        torch-version: [ 1.5.0, 1.6.0 ]
        tensorflow-version: [ 1.15.0 ]
        include:
          - python-version: 3.8
            torch-version: 1.7.1
            tensorflow-version: 2.2.0
          - python-version: 3.8
            torch-version: 1.8.1
            tensorflow-version: 2.2.0
          - python-version: 3.9
            torch-version: 1.7.1
            tensorflow-version: 2.5.0
          - python-version: 3.9
            torch-version: 1.8.1
            tensorflow-version: 2.5.0
        notebook-details:
          - { dep: "huggingface nltk", extra: "'tensorflow>=2.5.0,<2.8.0,termcolor>=1.1.0'"}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          sudo apt-get install -y libsndfile1-dev
          python -m pip install --progress-bar off --upgrade pip
          pip install --progress-bar off pylint==2.10.2 flake8==3.9.2 mypy==0.931 pytest==5.1.3 black==22.3.0
          pip install --progress-bar off types-PyYAML==5.4.8 types-typed-ast==1.4.4 types-requests==2.25.6 types-dataclasses==0.1.7
          pip install --progress-bar off coverage codecov
          pip install --progress-bar off ddt
          python -m pip install ipykernel
          python -m ipykernel install --user
          pip install --progress-bar off asyml-utilities
      - name: Format check with Black
        run: |
          black --line-length 80 --check ForteAug/

      - name: Install Forte
        run: |
          pip install --progress-bar off Forte
      - name: Install deep learning frameworks
        run: |
          pip install --progress-bar off torch==${{ matrix.torch-version }}
          pip install --progress-bar off tensorflow==${{ matrix.tensorflow-version }}
          pip install --progress-bar off transformers
          pip install --progress-bar off nltk
      - name: Install Texar
        run: |
          pip install --progress-bar off texar-pytorch
      # - name: Lint with flake8
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     flake8 ForteAug/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
      #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #     flake8 ForteAug/ tests/ --ignore E203,W503 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # - name: Lint with pylint
      #   run: |
      #     pylint ForteAug/
      # - name: Lint main code with mypy when torch version is not 1.5.0 and python is 3.9
      #   run: |
      #     if [[ ${{ matrix.torch-version }} != "1.5.0" && ${{ matrix.python-version }} == "3.9" ]]; then mypy ForteAug; fi
      - name: Test with pytest and run coverage
        run: |
          coverage run -m pytest tests
          coverage run --append -m pytest --doctest-modules ForteAug
      - name: Upload coverage
        run: |
          codecov